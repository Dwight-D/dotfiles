#!/bin/bash

#======PROGRAM REDIRECTS=====
alias ssh='backpack'

#========NAVIGATION==========
alias xfiles="cd /mnt/xfiles"
alias nodc="cd ~/projects/nodc/nodc-modules"

#===========UTIL============
alias cp="cp -i"                          # confirm before overwriting something
alias df='df -h'                          # human-readable sizes
alias free='free -m'                      # show sizes in MB
alias tt='(urxvt &)'


#=======SHORTCUTS==========
alias issh='initssh'
alias fuck='sudo $(history -p !!)'
alias la='ls -lah'
alias ll='ls -lh'
alias rr='ranger'
alias makeover='wal -i /home/max/shared/wallpaper/dual -a 75 --backend=colorz'
alias rss='canto-curses'
alias cgrep='grep --color=auto -C 5'

#========SVN============
if [ -x "$(command -v colorsvn)" ]; then
    alias svn='colorsvn'
fi

asvn(){
    lsvn ? | sed 's/^/svn add /' | bash
}

rsvn(){
    echo "Removing the following files:
"
    lsvn ! 
    echo Are you sure? yes/no
    read ans
    if [[ "$ans" = "yes" || "$ans" = "Yes" ]]; then
        echo Deleting...
        lsvn ! | sed 's/^/svn rm /' | bash
    fi
}

lsvn (){
    if [ "$#" -eq 0 ]; then
        svn status
    else
        while [ ! -z "$1" ]; do
            local arg="${1^^}"
            if [ "$arg" = ? ]; then
                arg="\?"
            fi
            svn status | grep -E "^$arg" | sed "s/$arg       //"
            shift
         done

    fi
}


#  _____                 _   _                 
# |  ___|   _ _ __   ___| |_(_) ___  _ __  ___ 
# | |_ | | | | '_ \ / __| __| |/ _ \| '_ \/ __|
# |  _|| |_| | | | | (__| |_| | (_) | | | \__ \
# |_|   \__,_|_| |_|\___|\__|_|\___/|_| |_|___/

cleanprompt() {
    PS1="$COL1B\u $COL7 - $COL6B \w\n$COL1B>$COL2B "
    PROMPT_COMMAND=""
    echo "Good as new"
}

#  , _                                 
# /|/ \                             |  
#  |   |   __ _|_  _    _   __,   __|  
#  |   |  /  \_|  |/  |/ \_/  |  /  |  
#  |   |_/\__/ |_/|__/|__/ \_/|_/\_/|_/
#                    /|                
#                    \|      
#=======================================

note() {

    if [ "$#" -lt 2 ]; then
        echo "You forgot to specify a note"
        return
    else
        local note="$NOTEPAD/$1"
        if [ ! -f "$note" ]; then
            echo "No such note"
            return
        fi
        shift
        echo "$@" >> $note
    fi
}

notepad() {
    local option="$1"
    local note="$NOTEPAD/$2"
    shift

    case $option in
        read )
            tail -f $note
            ;;
        burn )
            truncate -s 0 $note
            ;;
        trim )
            tail -n 100 $note >| $note
            ;;
        list )
            echo "Notes:"
            for file in $NOTEPAD/*; do
                echo -n "$(basename $file), "
                echo $(wc -l $file | cut -d " " -f 1) lines
            done
            ;;
        new )
            echo "New note: $note"
            touch $note
            ;;
        * )
            echo "Bad instructions dummy"
            ;;
    esac
}
#============== NOTEPAD END =================

#Override cd (suppress path echo)
function cd() {
    if [ -z "$*" ]; then 
        destination=~
    else
        destination=$*
    fi
    builtin cd "${destination}" >/dev/null && ls
}

